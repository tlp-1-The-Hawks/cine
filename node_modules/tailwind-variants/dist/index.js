import { e, b, g, c, f, d, a, h } from './chunk-T24HS5CV.js';
import { twMerge, extendTailwindMerge } from 'tailwind-merge';

var se={twMerge:!0,twMergeConfig:{},responsiveVariants:!1},_=i=>i||void 0,j=(...i)=>_(e(i).filter(Boolean).join(" ")),E=null,O={},R=!1,A=(...i)=>v=>v.twMerge?((!E||R)&&(R=!1,E=b(O)?twMerge:extendTailwindMerge(O)),_(E(j(i)))):j(i),Z=(i,v)=>{for(let e in v)i.hasOwnProperty(e)?i[e]=j(i[e],v[e]):i[e]=v[e];return i},fe=(i,v)=>{let{extend:e=null,slots:N={},variants:q={},compoundVariants:C=[],compoundSlots:V=[],defaultVariants:F={}}=i,m={...se,...v},M=e!=null&&e.base?j(e.base,i==null?void 0:i.base):i==null?void 0:i.base,g$1=e!=null&&e.variants&&!b(e.variants)?g(q,e.variants):q,h$1=e!=null&&e.defaultVariants&&!b(e.defaultVariants)?{...e.defaultVariants,...F}:F;!b(m.twMergeConfig)&&!c(m.twMergeConfig,O)&&(R=!0,O=m.twMergeConfig);let $=b(N)?{}:{base:i==null?void 0:i.base,...N},w=b(e==null?void 0:e.slots)?$:Z({...e==null?void 0:e.slots},b($)?{base:i==null?void 0:i.base}:$),d$1=l=>{if(b(g$1)&&b(N)&&b(e==null?void 0:e.slots))return A(M,l==null?void 0:l.class,l==null?void 0:l.className)(m);if(C&&!Array.isArray(C))throw new TypeError(`The "compoundVariants" prop must be an array. Received: ${typeof C}`);if(V&&!Array.isArray(V))throw new TypeError(`The "compoundSlots" prop must be an array. Received: ${typeof V}`);let x=(t,n,a=[],s)=>{let r=a;if(typeof n=="string")r=r.concat(h(n).split(" ").map(c=>`${t}:${c}`));else if(Array.isArray(n))r=r.concat(n.reduce((c,f)=>c.concat(`${t}:${f}`),[]));else if(typeof n=="object"&&typeof s=="string"){for(let c in n)if(n.hasOwnProperty(c)&&c===s){let f=n[c];if(f&&typeof f=="string"){let o=h(f);r[s]?r[s]=r[s].concat(o.split(" ").map(y=>`${t}:${y}`)):r[s]=o.split(" ").map(y=>`${t}:${y}`);}else Array.isArray(f)&&f.length>0&&(r[s]=f.reduce((o,y)=>o.concat(`${t}:${y}`),[]));}}return r},U=(t,n=g$1,a$1=null,s=null)=>{var H;let r=n[t];if(!r||b(r))return null;let c=(H=s==null?void 0:s[t])!=null?H:l==null?void 0:l[t];if(c===null)return null;let f=a(c),o=Array.isArray(m.responsiveVariants)&&m.responsiveVariants.length>0||m.responsiveVariants===!0,y=h$1==null?void 0:h$1[t],b$1=[];if(typeof f=="object"&&o)for(let[k,I]of Object.entries(f)){let ae=r[I];if(k==="initial"){y=I;continue}Array.isArray(m.responsiveVariants)&&!m.responsiveVariants.includes(k)||(b$1=x(k,ae,b$1,a$1));}let S=r[f]||r[a(y)];return typeof b$1=="object"&&typeof a$1=="string"&&b$1[a$1]?Z(b$1,S):b$1.length>0?(b$1.push(S),b$1):S},P=()=>g$1?Object.keys(g$1).map(t=>U(t,g$1)):null,p=(t,n)=>{if(!g$1||typeof g$1!="object")return null;let a=new Array;for(let s in g$1){let r=U(s,g$1,t,n),c=t==="base"&&typeof r=="string"?r:r&&r[t];c&&(a[a.length]=c);}return a},W={};for(let t in l)l[t]!==void 0&&(W[t]=l[t]);let z=(t,n)=>{var s;let a=typeof(l==null?void 0:l[t])=="object"?{[t]:(s=l[t])==null?void 0:s.initial}:{};return {...h$1,...W,...a,...n}},D=(t=[],n)=>{let a=[];for(let{class:s,className:r,...c}of t){let f=!0;for(let[o,y]of Object.entries(c)){let b=z(o,n);if(Array.isArray(y)){if(!y.includes(b[o])){f=!1;break}}else if(b[o]!==y){f=!1;break}}f&&(s&&a.push(s),r&&a.push(r));}return a},G=t=>{let n=D(C,t),a=D(e==null?void 0:e.compoundVariants,t);return f(a,n)},ee=t=>{let n=G(t);if(!Array.isArray(n))return n;let a={};for(let s of n)if(typeof s=="string"&&(a.base=A(a.base,s)(m)),typeof s=="object")for(let[r,c]of Object.entries(s))a[r]=A(a[r],c)(m);return a},te=t=>{if(V.length<1)return null;let n={};for(let{slots:a=[],class:s,className:r,...c}of V){if(!b(c)){let f=!0;for(let o of Object.keys(c)){let y=z(o,t)[o];if(d(c[o]))break;if(y===void 0||!c[o]||!c[o].includes(y)){f=!1;break}}if(!f)continue}for(let f of a)n[f]=n[f]||[],n[f].push([s,r]);}return n};if(!b(N)||!b(e==null?void 0:e.slots)){let t={};if(typeof w=="object"&&!b(w))for(let n of Object.keys(w))t[n]=a=>{var s,r;return A(w[n],p(n,a),((s=ee(a))!=null?s:[])[n],((r=te(a))!=null?r:[])[n],a==null?void 0:a.class,a==null?void 0:a.className)(m)};return t}return A(M,P(),G(),l==null?void 0:l.class,l==null?void 0:l.className)(m)},K=()=>{if(!(!g$1||typeof g$1!="object"))return Object.keys(g$1)};return d$1.variantKeys=K(),d$1.extend=e,d$1.base=M,d$1.slots=w,d$1.variants=g$1,d$1.defaultVariants=h$1,d$1.compoundSlots=V,d$1.compoundVariants=C,d$1};

export { A as cn, j as cnBase, se as defaultConfig, fe as tv, _ as voidEmpty };
